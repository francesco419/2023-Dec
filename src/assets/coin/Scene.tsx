/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 bitcoin/scene.gltf --types --transform 
Files: bitcoin/scene.gltf [6.24KB] > C:\Users\franc\Desktop\Works\2023Dec\dec\scene-transformed.glb [97.95KB] (-1470%)
Author: MÃ¡rcio N. (https://sketchfab.com/marcio3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bit-coin-9488d7d5aa2f4c1c97774d56e1fb4aec
Title: Bit Coin
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cylinder001_moeda_0: THREE.Mesh;
  };
  materials: {
    moeda: THREE.MeshBasicMaterial;
  };
  animations: GLTFAction[];
};

type ActionName = 'Take 001';
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

export function ModelCoin(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    '/scene-transformed.glb'
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Sketchfab_Scene'>
        <group name='RootNode'>
          <group name='Cylinder001' position={[0, 354.331, 0]}>
            <mesh
              name='Cylinder001_moeda_0'
              geometry={nodes.Cylinder001_moeda_0.geometry}
              material={materials.moeda}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/scene-transformed.glb');
